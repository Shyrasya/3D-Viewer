/**
 * @mainpage Документация по проекту 3DViewer v2.0
 *
 * @section intro_sec Введение
 *
 * Добро пожаловать в документацию проекта 3DViewer v2.0. Написанная программа визуализирует каркасные модели в трехмерном пространстве. При проектировании использовались следующие паттерны проектирования: синглтон, шаблонный метод, фасад, модель-представление-контроллер. Программа разработана на языке C++ стандарта C++17 и фреймворка QT.
 *
 * Возможности программы:
 * - 1. Загрузка каркасной модели из файла формата obj (поддержка только списка вершин и поверхностей);
 * - 2. Перемещение модели на заданное расстояние относительно осей X, Y, Z;
 * - 3. Поворот модели на заданный угол относительно своих осей X, Y, Z;
 * - 4. Масштабирование модели на заданное значение.
 * - 5. Настройка типа проекции (параллельная и центральная).
 * - 6. Настройка типа (сплошная, пунктирная линия), цвета и толщины ребер, способ отображения (отсутствует, круг, квадрат), цвет и размер вершин.
 * - 7. Программа позволяет выбирать цвет фона.
 * - 8. Настройки сохраняются между перезапусками программы
 * - 9. Программа позволяет сохранять полученные («отрендеренные») изображения в файл в форматах bmp и jpeg.
 * - 10. Программа позволяет по специальной кнопке записывать небольшие «скринкасты» — текущие пользовательские аффинные преобразования загруженного объекта в gif-анимацию (640x480, 10fps, 5s).


 * @section build_sec Инструкции по сборке
 *
 * Чтобы собрать проект, выполните следующие шаги:
 *
 * @subsection build_step1 Шаг 1: Установка программы
 * ```
 * make install
 * ```
 * После сборки проекта вы можете запустить его с помощью следующей команды:
 *
 * ```
 * make launch
 * ```
 *
 * @section test_sec Инструкции по тестированию
 *
 * Чтобы протестировать проект, выполните следующие шаги:
 *
 * @subsection test_step1 Шаг 1: Запуск тестов
 * ```
 * make tests
 * ```
 * Эта команда скомпилирует и запустит тесты, расположенные в каталоге `./tests`.
 *
 * @subsection test_step2 Шаг 2: Генерация отчета о покрытии кода
 * ```
 * make gcov_report
 * ```
 * Эта команда выполнит тесты, сгенерирует отчет о покрытии кода и откроет его в веб-браузере по умолчанию.
 *
 * @section clean Возврат к исходному состоянию
 *
 * Чтобы восстановить проект до его исходного состояния, вы можете ввести:
 * ```
 * make clean
 * ```
 * @section dist Архивирование проекта
 *
 * Чтобы заархивировать собранный проект и его документацию, необходимо ввести:
 * ```
 * make dist
 * ```
 *
 * @section check Проверка проекта
 *
 * Чтобы проверить исходные файлы проекта на google-style, проект на утечки и на возможные упущения (cpp-check), введите:
 * ```
 * make check
 * ```
 *
 * @section make_all Выполнить все задачи
 *
 * Чтобы запустить тесты, создать документацию, заархивировать проект и собрать проект, вы можете ввести:
 * ```
 * make
 * ```
 * *ВСЕ КОМАНДЫ ВВОДЯТСЯ ИЗ ДИРЕКТОРИИ SRC
 */

